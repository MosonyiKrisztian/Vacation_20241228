// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vacation.DAL.Data;

#nullable disable

namespace Vacation.Migrations
{
    [DbContext(typeof(MySQLDBContext))]
    [Migration("20241229150520_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApproverDepartment", b =>
                {
                    b.Property<int>("ApproversApproverID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsDepartmentID")
                        .HasColumnType("int");

                    b.HasKey("ApproversApproverID", "DepartmentsDepartmentID");

                    b.HasIndex("DepartmentsDepartmentID");

                    b.ToTable("ApproverDepartment");
                });

            modelBuilder.Entity("ChildEmployee", b =>
                {
                    b.Property<int>("ChildrenChildId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ChildrenChildId", "EmployeesEmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.ToTable("ChildEmployee");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Approver", b =>
                {
                    b.Property<int>("ApproverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ApproverID");

                    b.ToTable("approvers");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Child", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Disability")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("ChildId");

                    b.ToTable("children");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("longtext");

                    b.HasKey("DepartmentID");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("Disability")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("InsuranceNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOfMother")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartOfEmployment")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Vacation.DAL.Model.IrregularDay", b =>
                {
                    b.Property<DateTime>("IrrDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Workday")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IrrDate");

                    b.ToTable("irregularDays");
                });

            modelBuilder.Entity("Vacation.DAL.Model.VacationRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApproverID")
                        .HasColumnType("int");

                    b.Property<string>("DateValue")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("ApproverID");

                    b.HasIndex("EmployeeId");

                    b.ToTable("vacationrequests");
                });

            modelBuilder.Entity("Vacation.DAL.Model.VacationStatus", b =>
                {
                    b.Property<int>("VRequestStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("VRequestStatusDescription")
                        .HasColumnType("longtext");

                    b.HasKey("VRequestStatusID");

                    b.ToTable("vacationstatuses");
                });

            modelBuilder.Entity("Vacation.DAL.Model.VacationType", b =>
                {
                    b.Property<string>("VRequestTypeID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VRequestTypeDEscription")
                        .HasColumnType("longtext");

                    b.HasKey("VRequestTypeID");

                    b.ToTable("vacationtypes");
                });

            modelBuilder.Entity("ApproverDepartment", b =>
                {
                    b.HasOne("Vacation.DAL.Model.Approver", null)
                        .WithMany()
                        .HasForeignKey("ApproversApproverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vacation.DAL.Model.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsDepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChildEmployee", b =>
                {
                    b.HasOne("Vacation.DAL.Model.Child", null)
                        .WithMany()
                        .HasForeignKey("ChildrenChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vacation.DAL.Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vacation.DAL.Model.Employee", b =>
                {
                    b.HasOne("Vacation.DAL.Model.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Vacation.DAL.Model.VacationRequest", b =>
                {
                    b.HasOne("Vacation.DAL.Model.Approver", "Approver")
                        .WithMany("VacationRequests")
                        .HasForeignKey("ApproverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vacation.DAL.Model.Employee", "Employee")
                        .WithMany("VacationRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Approver", b =>
                {
                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Vacation.DAL.Model.Employee", b =>
                {
                    b.Navigation("VacationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
